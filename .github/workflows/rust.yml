name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings
  rust_min: 1.66.1 # <- Update this when bumping up MSRV

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Format check
      run: cargo fmt --verbose --all -- --check
    - name: Setup wasm32-wasip1
      run: rustup target add wasm32-wasip1
    - name: Clippy check
      run: cargo clippy --verbose --all-targets --target=wasm32-wasip1 -- -Aclippy::uninlined_format_args
    - name: Build
      run: cargo build --target=wasm32-wasip1 --verbose --all-targets

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup wasm32-wasip1
      run: rustup target add wasm32-wasip1
    - name: Setup wasmtime
      run: |
        set -o pipefail
        curl https://wasmtime.dev/install.sh -sSf | bash
    - name: Test
      run: CARGO_TARGET_WASM32_WASIP1_RUNNER="$HOME/.wasmtime/bin/wasmtime -W unknown-exports-allow=y" cargo test --target=wasm32-wasip1 --all-targets

  # Tests that our current minimum supported rust version compiles everything sucessfully
  # Note: Until Rust 1.77, the WASI target name was wasm32-wasi. When bumping MSRV update the name to wasm32-wasip1
  min_rust:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust ${{ env.rust_min }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ env.rust_min }}
    - name: Print Rust version
      run: rustc --version
    - name: Use MSRV Cargo.lock
      run: cp Cargo.lock.msrv Cargo.lock
    - name: Setup wasm32-wasi
      run: rustup target add wasm32-wasi
    - name: MSRV cargo check
      run: cargo check --verbose --all-targets --target=wasm32-wasi --locked

  # Tests that docstrings generate docs without warnings
  cargo_docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Compile docs
      run: RUSTDOCFLAGS=-Dwarnings cargo doc
